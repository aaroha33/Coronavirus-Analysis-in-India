<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india' inline='true' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.04xj7pu1cpnlym0zwu5w100rzwez'>
            <connection class='textscan' directory='C:/Users/emonbud/Desktop/Code/Problems/Coronavirus India' filename='covid_19_india.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.04xj7pu1cpnlym0zwu5w100rzwez' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.04xj7pu1cpnlym0zwu5w100rzwez' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cumulative_date' datatype='string' name='[Calculation_999236221584809987]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(MIN([Date]))+&quot;to&quot;+STR(MAX([Date]))' />
      </column>
      <column caption='Confirmed Foreign National' datatype='string' name='[ConfirmedForeignNational]' role='dimension' type='nominal' />
      <column caption='Confirmed Indian National' datatype='string' name='[ConfirmedIndianNational]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Cured:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State/UnionTerritory:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jharkhand\#&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagaland\#&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD'>
            <properties context=''>
              <relation connection='textscan.04xj7pu1cpnlym0zwu5w100rzwez' name='covid_19_india.csv' table='[covid_19_india#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='string' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='string' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar Graph Statistics'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='MDY' name='[md:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]' />
              <lod column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Cured:qk]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Deaths:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Multiple Values]</rows>
        <cols>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[md:Date:ok]</cols>
      </table>
      <simple-id uuid='{2E9881EF-1F60-4B0D-AA81-E995A7F1312F}' />
    </worksheet>
    <worksheet name='MAP'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:Date:qk]' included-values='in-range'>
            <min>#2020-01-30#</min>
            <max>#2020-05-21#</max>
          </filter>
          <slices>
            <column>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Latitude (generated)]' field-type='quantitative' max='3541726.668816085' min='1443867.0739992061' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)]' field-type='quantitative' max='9973552.989318382' min='6406862.2253362713' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='1' field='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)]' field-type='quantitative' fold='true' max='9973552.989318382' min='6406862.2253362713' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
              <lod column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Cured:qk]' />
              <tooltip column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' />
              <geometry column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-color' value='#ff9da7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[Latitude (generated)]</rows>
        <cols>([federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)] + [federated.0umxtsg1bh4w3q11swz0z0qegjab].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{B96927F6-9249-4CA6-9081-067A219FE67B}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DD834CB4-44CE-457F-8991-0CD859E1D403}' />
    </worksheet>
    <worksheet name='State wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/UnionTerritory]' derivation='None' name='[none:State/UnionTerritory:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' direction='DESC' using='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]</rows>
        <cols>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]</cols>
      </table>
      <simple-id uuid='{CBB594C5-1B51-41DC-B4A5-21511F4DA20C}' />
    </worksheet>
    <worksheet name='count'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Count' name='[cnt:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[cnt:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[cnt:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffbe7d' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0umxtsg1bh4w3q11swz0z0qegjab].[cnt:Confirmed:qk] + [federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk])</rows>
        <cols>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[twk:Date:qk]</cols>
      </table>
      <simple-id uuid='{5DD3596F-142F-40C5-9DA2-D27FBB7FFD56}' />
    </worksheet>
    <worksheet name='date'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column caption='Cumulative_date' datatype='string' name='[Calculation_999236221584809987]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(MIN([Date]))+&quot;to&quot;+STR(MAX([Date]))' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_999236221584809987]' derivation='User' name='[usr:Calculation_999236221584809987:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[usr:Calculation_999236221584809987:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#f28e2b' fontname='Georgia' fontsize='16'>Confirmed Coivd Cases in India</run>
                <run>Æ&#10;</run>
                <run fontsize='11'><![CDATA[<[federated.0umxtsg1bh4w3q11swz0z0qegjab].[usr:Calculation_999236221584809987:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{233B969E-FA53-419A-9F10-4BB8EEBBB9F0}' />
    </worksheet>
    <worksheet name='forcasting'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic Medium'>COVID 19 Forcasting</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.0umxtsg1bh4w3q11swz0z0qegjab' />
          </datasources>
          <datasource-dependencies datasource='federated.0umxtsg1bh4w3q11swz0z0qegjab'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sno]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='covid_19_india.csv' datatype='integer' name='[__tableau_internal_object_id__].[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD]' role='measure' type='quantitative' />
            <column-instance column='[Confirmed]' derivation='Sum' forecast-column-base='[sum:Confirmed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sno]' derivation='Sum' name='[sum:Sno:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[fVal:sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_0843B93F82424005ACBAD327DF5262CD:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Cured:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Sno:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#9d7660' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[fVal:sum:Confirmed:qk]</rows>
        <cols>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[tdy:Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{39FD99DC-339D-447B-9FE7-DEDA1BC99B23}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='3' param='vert' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{11A1FEE6-8705-42A2-8A42-61BB5B307985}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='forcasting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01B812EB-EEF4-41F4-9E5D-447E1416C2C4}' />
    </window>
    <window class='worksheet' name='count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[twk:Date:ok]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[wk:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E3589A69-E661-48CF-9037-784A99F3C115}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D54D4ABC-1EE1-4250-B725-A7A28D14CB57}' />
    </window>
    <window class='worksheet' name='Bar Graph Statistics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[:Measure Names]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[twk:Date:ok]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[tyr:Date:ok]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FA224E40-3374-46AE-BCEF-0F8DB9E8AB5E}' />
    </window>
    <window class='worksheet' name='date'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[usr:Calculation_999236221584809987:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EACBBC2A-E9CF-4C45-AE27-B2CFBAC2324F}' />
    </window>
    <window class='worksheet' name='State wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:State/UnionTerritory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A84A288F-52D5-4310-B11D-FF0D6791D4A2}' />
    </window>
    <window class='worksheet' name='MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0umxtsg1bh4w3q11swz0z0qegjab].[sum:Confirmed:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:Date:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{21C39F2E-672A-4F85-9050-9E5A32EB7793}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:ConfirmedForeignNational:nk]</field>
            <field>[federated.0umxtsg1bh4w3q11swz0z0qegjab].[none:ConfirmedIndianNational:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{864AB0D4-CB85-4F85-9A7B-5F5D14C3F950}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Graph Statistics' width='192'>
      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
      AGwuNP8/4+AwQZiWDgAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='MAP' width='192'>
      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
      FZEv7lYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='Sheet 7' width='104'>
      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
    </thumbnail>
    <thumbnail height='192' name='State wise' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO292W8c25an98WQI5nJzGTOTM7zJOkM99x76rar2+4yugHDfrOBfjJguNH2
      n+C3evGjgXY/2DD8YBseALerYVS52nWBdleX233vmXQkUQNnMslMZjKZ8zzE6IckJfEcHYkS
      SVGU4hMkUpERK/aOjBV771+svbZgmqaJhcUninjTBbCwuEksB7D4pLEcwOKTxnIAi08aywEs
      PmksB7D4pLEcwOKT5qNxAMMwrsWuruvXYvM6Xr9cR1lvm13DMN7qXpAvdzqdrY0dpufnkQWd
      9fVt5hYXkUWhXxhN5ej4hLHRxFtbPkgmmZicBKBVK2I6/Qw6pF/c/6jaZbvYe7dqvAbTNBEE
      4YO3adk9tXn6r8DF7F7SATRyyX3c4VGGxTobe0kmZ2fZ39lEkZwsTI1ysL9FpVRiZnGZSjZJ
      sd5lbnGJevGYYqXBeDxEMp3BH07gs2vsp0+IjU5SPMnQajUZCo1Q2P6eihTjq+UxcuUmiHYG
      hDb5SoupuUU8LhstRSdTVy5XHYtPjkt3gQIjY1SO0xznSozEQoCA0+Ugt7dHpafh9YdZmRxm
      /7iG0+XC7JbYOsizs7nJyPgEDpcTWRTY3Nwkm8ng8gbweVzYHG7mF5conRwRjcWZW1xmUOiw
      dVRhIhHB6XJj9JpsJ9NXcBksPlUuPwYQ7Mhmj6YuMmAX6ZYOqZo+phNRDNPEbrcjSRK61iOZ
      KbC4MINg6PhDUfyDLjaerTMxu4B/0MXE3BLBAZPHz7aRZBuyJCGKAqIoPu83j46NI0saO3s5
      FhbmkEUrlMni3blkF0gmEh1mUNapGA5septBvx+puE3P5iLscCCGgmB3EAsKtM0a6XyLaDCG
      ZDgAmBgfY393D38wTLdZI5OrMjExiam0AYhEIgwPDbK+uUNrIkHU5wJsRENuDo/LhIMhAJyy
      SGjAdrnqvILrGgMgXLSX+nZ2b0tf/brsmqejgIteXeFjiQbVdR1J+uVB8ruiaRqyfMnnxCts
      SpJ05V/+dZT1ttk1DAPTNC98L1x9rS6ESb1c4DBzQiAcZyQy/PwTQ+tRafQY9nvfYEMnf1Ih
      HAn2/5tOw9b6lZdUNEwQr/ZGlUwTELjqJuA6yvpau8NB+PKrKz/f++RGHEDrNdjYO+bLL1bp
      dDrUK0Ukl49WMYcvMkynp1Ivn3CQzhGMjWEzejQaZfzhBJnUAZLTQ9Qv8W/+zUO++u3fIhEd
      hnYLMpkrL+t1vCi5+lu0z3W91PlFux9B3+FGXoSp9SLuUIJC9pCN7STNepm2olPK5lC0Ltli
      FbvDhSTCxtYWJ0dJBE+YoUE3boeNo+Q2sifE2NhE/+a3sHhHbsQBbJ5h2oUM4fgEptJGoN93
      6/S6z/fZWN9kem4Bj9uB7PAwEg1S3N9ECCRIxIIYhoCJcS1vVC0+HW6kCyQ7vcyMBnj69AmR
      xDjBgJvNnV2cgRB2TARgfHyE3b0koXAEr8OGBAyPTXKyvY/DOYTTZifkc5LNVxiJBMDlgnDk
      ystqqUCvsev3X/m53jcfmApkcrizjmN4nGhg8K2OtFSg26XWXJfdW6IC/RICJgL5TBJZnCTo
      e9kJeiT3S5hCj6nTGCG106Rj2vC6HewW8zzIXP1b4U85Fmg8MMwfTUxfmb0PkQ/MAaDR1VhZ
      WuTh9z/g/vIrjnY30UQ3i/Mxms02mlpio93CNhhgNORGU/ue3uz1OKiUbrj0HxcDdvtNF+Ha
      +SDDoUXJxljMy/7OHppzGK/QIFPpR3qKspPZhUU61SJqp0G1efURoBafDh+kA5iGTibfZNhr
      I5tKUukKDNr7TbsgisjX0H+2+DT54LpAgw6JJ882GJldJuhz0+0otDURl8NFNDqMKWgARKJR
      7G4HgdNmesDuYNR39arEp6wCBQbeToi4jXxgKtC7Y6lAt0utuS67N64CZQ52OS6Uke1u5pYW
      cdt+uSDNSgXbkJfsQYrJqUl0tcXeQZHZ2XHyuRyRaPRnx7QrWWpCgJjPef6DdAo2riEW6PRp
      fZVIpnkaD3G1dq+krHfvQXzkagp0C7hyBxiZmKFR/oHE8gp2tcHjjSTOQT9jw3Y2UkUEXcMm
      iwwGYnhkHZtp0mq1ANCUFgc7e4TiMdLpFMN+L1vbu4hOL4szo+xtbVIqnRCa/ZzccZNgwEmh
      qhCLBKDdhuPsVVfn04sFmpu/Ciu3hmsdBAuyHadNIrm7RatRwRuZwi7pzMwvUC/kqZXLKMb5
      Htj41BSp5H6/cJKMw24jtbVNLn+E4I2yMD0OaBQKVXS1TbFcv84qWHzkXKsDHGyu4xudJhTw
      gCkgSRKiJCOK4i8+BgXZRcChU2ypHB/u4AgkiA/7MEwwDJNerwcImIZBr9tB/yhGMBY3xbWo
      QKGRUewiJKam2N7fxTscwe3zIssSeiSGKArEYhFsIjhEiehpX1+yDxIKmvi8AWrqHuF4gq3d
      JK5giFA4QWp3m7IpEQ15EAYLHJe7xMKn4wSXG6KxK6/LJ6cCuVxXU5hbgqUCvQFLBbpddm9c
      BXqZ4nGKTKGK2+NnZiLx0hduUiiUCIWCrzyuenKCIxTCrBWpm+4LBcZ1Hjyg9X//7gpL3+cm
      YoHkaJThf/QPr/ScFq/mWh2gVKyzsLrK4aOHVLoRyofbNBWR5ZUFut0OSrvO1m4ShyfAeHCA
      jf00/lCU7OP7GNFRpocH2Tk6JOd2sby6yOH2Fi3FYHF5jp0nG2iYjM0s4h90oFeq9DY2rrM6
      7w2j077pInwyXOsg2FA7PH70kGLPYMAm4XK5aOeTZKsKJ7kTJJsdu03mYGuHfLGAIbsIBfyE
      I3EWl5cZsMvEx6YY9Yuc1DXcLied2gmpfAXVcLI4O0Eud3ydVbD4yLlWBxBtLmYmE0iyjN4p
      ka+LTI1HMU6lz72tDUKJKUJDg/hiY8wmgqw9foIsCaiajgnIsoQgiii1PCcdkanxEdANpNPt
      VkSQxWW41i5QKBbF6wuyMiPQUG0MynlaeAgOyJSA8clJtpP7DEVjSLrCfirDxNQ0Ya+N9a1t
      RkcT+G0u7EYYmzyIfrhDQ3MSDHvRHC4km4NwsB//I/n9OJaXrrwO1zMGeP0LW9sr3oBbXA83
      ogJV8hmKbZiduLpX7pYKdLvUmuuye3UqkK7wZGOXpeVFRF3lyfo2y6srSD/5zhonR3RdAeql
      AtOT4288YeH4kGy+htvr53VpbAy1y+FxkcmxV2WW7rG/V2Rq+oUDfb+R4S/+sPPG878t16YC
      wSubgf/yP/13EK8ht4/Fq3mtA2SPUkTGprC3jzlI55hfmGFjcxvsbpbmptjfekYhlyNx92uO
      DndpVsuMTM3SrtcYG42SSh0jGh2KlSZTCyt4XTZK1QaLyyukttY4SguoWheb249ez1Nrq8wv
      r1DNHZAvVtBsHjzZFEf5CuMz8zQLKUqNHrNzE6T2dmg0Cs9VoGqzy/pB4T1euuuhn9rPcoD3
      xWsHwdHRBCeZDMfFBiPhIRBlXE4bR6kkpeweumeM+ekJRMAbiHDn7gzHhwVKJ8fU8mm6ohuX
      y41Ah+2dftIqQ2nz9MkTik0VsVelrNgYjfhxuV1o3QoHB2lyVY2V5UUcNtg7zDAzNcrezh75
      fJ7hYASnXcIfirM4Z6lAFpfjtQ4gyAOgNtAFGzYByoebmEMJYqH+wFPTNXq9Lib0+7SnTfd4
      PMD3z7KMhQfZS58wOzuFfLpqh2h3s7K6ym9+/RUuWSYxEsfo1kiXFaYmRxEMA13X0NQemg6d
      Vo1MrkBgOMDiyj2MZo5kpowoiQiCpQJZXI5f7gJJDuLhAHbDiWrzYXbqDPm9lLf2cA8FGYom
      aO7vUDfsxN12nNEI4CAWD+AfknGnajhsNuLDHjKFNvGRfga3SCSGdOoo7kAYp0NEsnkZduWo
      tGXCkQiBdoH9owKxSIip6BAHmTzDYQ+NSoGG5mAmGqbpaiPZnISDAQACXhd3p29PXqBfsnn1
      EUIWr+MaVCCTg+0NPNFJhr3vL7DKUoFul1pzXXbfSyxQ4eQYfyiG3q3RVGSUTp1YLEazXMBw
      +5mY+2U9vpA9JFuo4vL4mZkce60KdHBcZOqXVKDdAlMzLz4zinXMTPldqvNaTNNEu4YWQLdJ
      yHcmr9SuxdvzTg6Qy6bxDMdQ21XyJdhav8/c4j2U0h5lYZjPV+Y5TifpGTZW5kZJZbJ0dTtL
      s+OUag0Wl1dJba9xlBJQtC62AT9GvUC1rbCwvEr1OEm+VEG1efFkD8nkK4zPLNDMpyg1u8zO
      TXK4v0ujWWBsZgn/oAMUDbN+PTE01/GixHzNVFGL98elQyFEm4tEYpSlhWmi4Rizi8sMDbpw
      Ox3Uj3c4qXdJZivMT48BL6lADQ1JqVFRHYxFArjcLvRulYODFLmazsryEk4b7B1kmZ4cZW9n
      l3whT+BUBQqE4yzOTVoqkMWleKcWwGGTaXW6dKsNnF4/zRLohoEkiXQ0jVo+R0f0MhYLYBgQ
      Gxl5PvAV7W5WZpewyyKl5CaJaAyjW+WoojA1kSBfM9E1DU3pq0C9dp1cvkxgeJjI8Dil7AHJ
      jIooWiqQxeV5JweYXlhmd3sH0ellOuRh2DbB1s4Bc9MzFDd3ECYmEMoHmAMRfJ4BBlyO58ee
      U4GGI6cqkI9hZ55Kx0YkGmG4VWQ/UyQeCTMd9ZHMnBAPxWhWijRUOzOTYZquDpLNSSTUV4Fw
      2BD8V5/H5tpUIKsL9EFgzQh7A5YKdLvsXosK1Cwfc9KSmB4Nv/Lzvb1dAh4HuitM0ON45T5n
      PFeBBv3MTL27CrS3W2D6JRUoVemyXriGPKE/Cd2Me+18NvLxZ0z7VLiAA5ikM3laqomRCJPc
      fkq7p+MdjhP12djYOSBfqeOdDrOZfMag283KzAjpTJae4MYjdilUGkwtrDLktp1TgdIpAUXt
      Yh88iwVSmF++81wF0mxePJlDjgoVJqYXaBQOKTd6zM5PvogFml0iMOigqxkUW+q1X7BB+weZ
      TtXiHXnjt2kaOs2OilvUqLQV2j2NldU7VMs5dvcOWFq9SyzoA0FianYBn6FSVzukC03mpxK4
      XC4kscfO7vlYoFJDQ1Zq1PS+CuR2udG7dQ6TKU7qOnfOVKDDDFMTCXZ3dikWi/hPVaDhSILl
      +SlOLBXI4hK80QEauSS4hnAOOEmnjkEQEc5SepgmmqbR6Xb7q34KIoLQ181j8TiCobGfyTMz
      PYH0k1igX//6VzhlmZH4qQpUVZmcGEEwTXRVQ1W6fRWo06BQrBIMDjO/dAehnSeZKffjjq4h
      tYjFp8Ubu0CqzcfnKyEkwSSfLyBJ/f7vSDyOx+1gZ2ebYGSEQd8ghk1GH4ljd7qRAwaCKBMP
      esmWuiQS/QwQkegLFWjgZRXIlafWtRGJhgm2i+xnSoxEw0zH/Bwc5YiHYrRqBRqanZlYmKb7
      vAo0YJcY8V79gg4/VYEC7qtfjd7i5rBUoDdgqUC3y+57zwtkqi2OqxpRn52tg2MWZifJHeeI
      xV6dpS2bzfa7R0CvUeTpbgabLDE1O8+g8+2erp3aCWXFzUjIQ/2oTGXz5LLVOYd3fBjfTOhK
      bVp8WFzaAQTZTja1w4AR4Pg4z/TEKMcnBZyizkG2wMjELFo9R77aYiQxyvfffMvcnc9Zmp1A
      aRQZHlsgLBTYTuUI23ucVFrMLC6R2XmGYpgMx6fw2XpsJ7PY3V4mY0PsJI9wDwWJeQx6Sl92
      1bsanXLr0hfkZVxBS+782Lm8pifYEAWDYrnOTCJIPn+E0xtle/+QyckJkrvbFEtlvL4gfp+P
      xNgYC7MTzw/f23zK/cfbxMI+Do5OmBwdZnv7AMWUWL2zQvk4y04yw917dzGUNrLdiV2WSO7t
      XUuQmsWnxZWI2n67QK4LiUSQx/c3iSdC6EqXYqnCcCjE9NwiA2Kbrf0MYGKcKkIA0wsr/Prz
      ZdLpHN12g3KtSzjk7ytNfaEHwTRQNY1Ot8f25iaJqRm8A69/4WZhcRGuZAQyOjUBVR3RPsTc
      8ixDdoHPPv+cvYMjwiPjdFt1CnWN6dk4SsDGbjLNwvQ4jqEI1Z1NmnYHy3Mz9GKDpHNlxqKD
      uO1xQCIej+J2iuxu76IZMD09xX4ySXx0DOeAh+DpuME2YGcw7ruK6jzHMeS+UnsWHx63QgXK
      Zw85LlTwhxOMxV6dUNdSgW6XWnNddt9WBbo2B6iXT9g/SNHVJSanZogMe59/tru3y8z0zJWe
      7/HDh/zrv/6XV2ZvZm6Ov//v/weWA9wyux9MenRvIMKi3maz6SUS8LD1bI2uYWNpeZFOp0O3
      UWZ994BAOMGA2eCo1EZ2uFieGeXZs3V0HeZWV0htb9FRTZaXZ3m69gxREpiYW6GRP6BYbTEx
      258R1m41yR6lr6z8geHhK7Nl8eHyXiK7epUUFW0An10jfVIDYGtzm5HxSbKpfdrtJtMLKxhq
      h+zBLtGpZYJumZ4h4nY76NVzZIo1ZPcwi3Pj5HMF3C43gq6wnzp6H1Ww+Eh5Lw4gynbq1SKa
      YMc32FdvJMGgWCzjHw7Rz4TWj+uRJJFer0e73aJTyVHXXYxGQ5jGWUiCACjsHRZfO6newuIi
      XGt2aNkzTMJpx+YJsDLZodrWGXDZGYmP4B1wsbO7x0Aggt/twyHDyMgI/iEP+7s7VJoK4UCE
      dm0bzRUg6PPic+vIdhuRkAOPzSRX6zEW67+p9fkDLCyvXFnZR0ZHr8yWxYfLB6cCdVtVtncP
      ER2DLC9MXzja01KBbtdg9brsfjCD4IugtSs83DjAYbczO7+Ayy7hHPBx5+55Pb9eLuDwhnA8
      L22X3e0CM3MvntJb+Rzfpg4uVZ5/a2qW2dCrZ71ZfJzcqAPonSre+AzjziZbh2mCLidhv5N8
      y6SeS6IaAoH4JPZuC9nrZ3t9k2ZPZ2l1ltT+DvVGnqmFFXwDDjqqyknzcotmdzTlimpmcVu4
      8fl9ye11nu2mCQ97qFRqaEqbSqOFio0791ao5I6plwv0dBGX24naKnGUrxOKj3FvdYHk/sFN
      V8HiFnOjLQDA5NwS8zEPoJBP5Wg16ujGIOJp//ism6w28pS6NsbiYVpGP56o3awhO5w3V3iL
      W8+NOoA8ECTqOruBbQS8NmqqTCLiR9AGAImRkRjFwx3s3hDeyg6KPETYP0SpXSdd7LI408+v
      OeR0MXfJ/vuQ49NaJd3iA1SBforRa/F4J82dlYXX9tcsFeh2qTXXZfeDiQUCjZNcheDwIMf5
      BomRt3k6a2QyBUZGzs8q297dZW7m1TFElYMCpY3chc9gc9oY/7cX3lwSywFuld0PSAY1KORL
      lHKHxGbvkDncJV+qMzqzSKeSo1Su4vd7qdVaCHY3S1Mxnm3tIshuRsNOvvv2Ab/6o98idCsU
      Kg3GZ5fodjq0qnlqqgO9eUKx0mR8bonAoBO9p9GrXjw7tOG++gn0FrePa1WBculdqpoD34Ad
      p9OJhMreQYb0QZKZpVU6nS7zyyvYlQ6KJOO0yRQy+0jeMGNjE4zGhnG6nAimxn4qTaOS59Fm
      mmjQi9PpQjBUkqnMdVbB4iPnWh0gOjZD1K2TKdROF7sbQwI8/hCDL95qIQiQ3dtmIDrOsG8A
      TBHD1DEMhWSqxPTEKKIAHn8Yn0On2mpy8NJ2C4t35Rq7QBIjiRi+oUHyxTLjIxGOKz0mRiNI
      pgZALDaCLApEEgncHhe723sMx6dwyjYS0SGyhSaj8SHydZWJeARMHZ9ngHy53t/e0BiP98cW
      tkEHnoT/wqWTHVZ+H4tboAJdFEsFul2D1euye+lBsN6pc9KCeND7qv2vlO2dHeZmZ+m1arQN
      G06zTUNzEQ4M/GzfVumYGoPEhz2vtFVb26P0Lx9c+NxDn80S/pMv3rnsFh8HP3eAXoN8RcBs
      npAv1xmbXaaU3qKn6vQ0EVEwmVteYufxWr/zbnNgijYWxyO0DAdS5wT8U/idcLi7QaneZXph
      mfT2Y3QkgiOTeIQOe0d5qs0uc7OgthtUVQeFVJLPv/qcnfVnNHoqi8tL7G2sY0guxkMOtncP
      yblcLN+9g0M6//TUOz16uYsvkqfVrjaHkMXt5BcHwQ6HE0nS2Ns9oqfD6t0VHDYnUyMBytUm
      NoeXmfEY/uAoMhpqr02rrdCpFemoACYOpxNBbXGQLaBLDu7eXaR8XCB5dMK9e3cZfp51wWDr
      wTcMxKeRBBGny4HerpDOFqm1ugRDQQQEJmYWGA/ZKTa093JxLD5+zjmApmnUa3XcLgfJoxxT
      k6P0e1Ln43KebxKef4Qg9FeOr9XOIjJ7pDMNJsfiCJj93U73NTUNRVVod8+iL0UWvvgtyvE2
      5eIxpZ5MIh7CRGZldZniwSZ1ReDsj4lBtVpD7bRoda9/TQCLj5dzXaBaKUdJczM7FqAgNMhX
      NCbHIwiCBsiMJGK4nRI2bHjsMk6XjaAhMeRKMOgdJFfcwRWZxucEcDASHaCiyIxGAqANADYS
      oxHcjgh7O/uMjY0D4PD4CZoyieF7VJs9fPIJqs1HzOehcpJmIDpBOOhDwYbNiOG0SdRKHZyi
      nZ4oMYANe8CL9+70hSvuTLw6vYrFp4WlAr0BSwW6XXY/oFCIi2HqKielGmH/AOl8jfGR6Gv3
      bxXTVMQgicD5yM3k4x94/Nf/14XO+e/95/8FDreV+NbiQ3AAQ6dYLpNP7zO5/Dnp/S0K1RbT
      CytUjw/J1zrMjYU5yOQY9EcJO1RUwyCd3O7HAs0uEfA4UTptqvnshc75cm5Si0+bG58RBpA7
      2KAleBmUdQ6yRRLxEFsbW6TTGVZXl7HZHUiiyMFB8nlGaIfD0Y8FSluxQBbvzgfhANGJReaj
      Dp7tH4PSZH1rD99wAN9wEKdNIrm/gyDbkZ73mXV2dw5wOB1gJUm3uAQ3Pgg2zf70RkkS0TQd
      UYCeouFwODBNA0mSMAwdRdGQbTKS0BdVDV3FMAUkSUKSRConWUrZwwudc3LlSyTbxWKBrEHw
      7bJ76wbBgiA8L+zZxXC5zoolofV6CHY7TueL9QAEQBTPx/PL3kEGXOOvPZfbPsCQc+jKym5x
      +7lxB3iZ492nHDYMhE6Duc++wuw0aB/nGJifxy+/3qO/Pfg9/8MP/91r9/mTub/Pf/Kb/+wq
      i2xxy/kgxgBn6JrBxPQsPrdEVzHJ5bKAyubTp/zhD9+iqD2erK3xzbff0W3l+avf/Q3ru1eX
      Edri0+ODcgDT0DhKp9AEG6ahoesGYGNhZYXYsJtWs42im3TaDdpdlWB8kqUZK4enxbvzQTnA
      GWq3jaL9fGzebVRRBRvy6ZjBaeUEsrgkN64CvYyhayiqhihK2GwyhmH04+1EEdM0EAQRVVEQ
      T5UfwwRJ7PtwtnrEQWX/tfajnhhTwdm3KpOlAt0uu7dOBXoZUZJxSi+K9HIlBKH/u93xQg16
      eUqAV/Yx655/rf0hz9Uuomdx+3mvDtCunFBWHSTCHp483mT1zvKV2X766CF/8c/+7LX7/Mf/
      8B8xv7R0Zee0uP28VwcwdI1WS6PTkWm3u3QaZbb303R1kdEBG7uVEpGhIQxXkKitQVUK0itl
      qNVqzK+u8OP3a/i8NkJjSwjtEwqlKoHENBNRaz0vi3fjPQ+CTYonx6TTR7R7Ku1WC8OEermC
      ZqjMLH/B/MIindIxR8UWcZ+drqKA3qVc7xCOj7OyNE+3WafVbCMKUCpV3m8VLD4q3rMDCMTH
      Jpmbm8XjslOrVZBtdiRRAGScDhkEiZDXTtO0Y/ZadBQD289egunUai3sNhsXXkLGwuIVvFcV
      yDQNTFNAFEHXTUQRVFVDkmQEgVNVxCS19QR7bIGY146maSCKiIII9BfKM00T0zAw6KtAoihS
      ODnhOPv6yNCJ6Wm83rcLhbBUoNtl94NWgQRBfD6vWDqVcOz28zE9pq5iuoaJeh0ggHwWtGbq
      dBUDp8PWv3FEkZer6Pe5CHjPT6YRnZHn6pGFxau4URlUbVX48ckONskkMrFAIjSEINlp1Spo
      PR9t3cbQwKnsqbXY2a+wuvjqgDe1+iNq9n89t21w5b9CsFnBbxa/zI06wM5uktXPv8Btgx9/
      XENqechWWlSrLSa6NYpNN3tPf0ByepmdGSd3lERpZgmNLiF0TigUT1WgmKUCWbwbNxoKoZsm
      kiicLpFtUqx3+OKze0SHvWCamCb4fENomo5uGEQTk30VqFWn2WwjilAqWyqQxbtzoy3A9Fic
      Bz8+wG0z8UXGEVs51p6uUy7XmRj10x/02pBoU2t2XjpSp15rMehxoVsqkMUluPFYIF3XME0B
      Seo3RrqmI0gioiD0JzsaBsbpqN40+wm4TBMw+yqQKAiIoojazkHv6Jxteegugni5LNCWCnS7
      7H6AKpBJt9vD6Xx15KYkyahKD12wIUsipqkh4EAQ+h0jJOl5P00QXv4pgaGhagYOu4gg+pFs
      PnA7EKxFAywuyLWOARone+zn6+zuvD5Ks3B8SKXVT3GYS+9T7+oXsq+2axwe5QEwC3W0+zug
      WnlDLS7OtbYAhqaiCiblkwyPtDbOoRgBh0o2X8LujaCV09RUiIf80KlxP1kk5Oyxuf4Utafw
      6y+W2dnepdZSuDcf5/tnKdyixvTqFxxuPEYQDRz+188DtrB4HdesApkgQCAywp3VVbRek0aj
      iSiKVMplDMHO11//Bpek8913PzI7P4coO1hYWiHsddPuNFE0k265SgeT0ak5lmZGKOYyDMan
      WV6cx/ZBTumxuC1c2+2TOdzj2X6B2E8Wu6jVa/0BIAI2u72/Irxk4+vf/ob1hw95ufPTbjXQ
      eDFAPsM+6KeU2mFrew/NSvJmcQmuTQUyDB0TAUkUOHcG08QwQRRfGtGe7mCa5s+UEcMw+gPi
      n2w3T98TiGL/M63ZQewoCAEPgnR1fm2pQLfL7tuqQNfWAoiihNLrAcLzG1gQBARRRJLEF/+n
      HwTX6/XO73f6V5IkRFH8yXaTXk99bgdAFdo0xRymYDUJFhfnyh0gufWEBw8fcQvOqMoAABUD
      SURBVHB0wu7O7sWPS+6hahrlSvUCe/fY3TmfDuUk+f/w+3/2H6J0Lr5MkoXFFbdrCsW6zq9+
      dQ+Ab/fXebz2CF1yMxEeIJXNg8OD2SkhyS6aXYPVmTBPdrJUajWmp6Y4yhXoVHPkKl0aHYWv
      786xuXdIRzFZjNn4bq/B7OwI+WyKB70ivvgMUyPWYhcW78YVtwDGOZMDviB37t5DNrs0Gg0Q
      JCqVEqLNzeqdO3idEtlMibtffcnk6Fkos0m5rvDZZ/cIeF00mw1ME1qVKiomEwt3mIwHCcfH
      WF1ZQuk0r7YKFp8UV+wATgbtCo8ePyZ5lDv3Sb1WR5SkvurzEsHgIGv3H3KYyT/fNugQWHv8
      hJNynWajjin0J70AOOwOLCyuiitXgfrqzAs152wG19lnv7Sds9AHoFmroBomewdHfPnZnZ+p
      Qy8JR89tNatpWtUdgonfIslX5ySWCnS77N64CiScBqe9LF2e/f5L23VNwTD6N7mqdJHtdhqN
      JsvLSz87rn9s/6dp6PSUfgiFJAYYGv7Nld78Fh8/l3YAtZrh2WEBgLXHjyin1klVFEDh8dqz
      C9koHKeexwKdHCXp4mR8fBy34/WRnGqnRirTP3d2PcXB99vvXhGLT5JLtz+mqaOevo5VFIXj
      zAlZvYs44Wd3dxdfKIxdb5ArlHH547RO9mgbMiuL8xym0nRUk7GQG6Vd5f5+iZCrHwukdHv8
      5ssVdrZ3qTZ73FuI8/2zNG5RPY0FeoJoxQJZXJJLtwBns7nAREAgEo0ys7hMIjHC2Ng4Y/Eg
      9XoDURQpVcpgc/P1179B6zQwTKjUaqCr/PD9A2bmZ5/HAkWGBmh1GiiaSa9SowuMTc2xPJOg
      lMvisWKBLK6AS98+sjdE53iPhw/u4/RGcHv9HG48pt42UNplUscF6o0Gwmk/3m7vx/q3G3V0
      Qeiv+yXZ+Ppvfc3Go/OxQN1WE0U3nytAZ/RjgbbZ2NyxYoEsLsWVqEBvbeKnMs4lEQSBRqmG
      YMBg6GqzQFgq0O2yeyMzws6+yG63g93ufBHo9vqDruLULxgUPtDVDiw+ZM7dMobW44fvvmFt
      bY1aW32u6XP686e/v/wXIJ1K0lX1c/q+aZqgdSnVWq887nnr8crPeP0xL7Fb2+Bx6f41Xy6L
      j41zLUDhaI/w1B3GQwOYusrW+hNKpRpL91Z49ngdXyhKwm9jI5nHFCVmIm728m1isREmRsKg
      9dhYf0a73eHO/DhPd48QBYEv7k6SzfXY33yI0+2lowpMhJwcnDRptDv83T/+I2hm+Ys/7DA/
      O02neIQpSgTi08hKmXyxgi82STm1gW3Ax+zCCm67Ne/X4vKcawHM09h7AE3p0O6qiGqFhuZm
      aMCJoqjk0keIdjvdWh27L4gdHVXta/jIDhaXVhgLutjaO0K0yehKk9bpHF+He4jV1Tu4ZDip
      dPjyy88IBzzPzz8yOc/CeIB8sYkky5QrJeq1JqIoUK5UCQaHUVUNTb/YnGELizdxzgGCI5Nk
      th+ytvaIYrVOu9tfrsgwNBBkWvU64dEEpqoyHI2AqiLbbNSqNQAkU2dj/QnHNZ2FmQToOl5/
      GLf99DRnb4ARGB60cf/BI7KFF4mt7HYHiC6iYS8IEtFwgEajhSiICIKJroOg92i2O2xsbNPI
      H3FUbLynS2XxMXJjeYGatQpdTWc/mearLz+7tL1KpwSiid9xtaHRlgp0u+zeeCzQRXG6nPQ6
      XZZXVq7Enhcbfuxv3tHC4iVuzAFku4uRRAK3Q+IPf/070vl6f76wYWAYfaXnzJt/6feznwAU
      NyBrqUAWb8eNrxKpdWv4RqYp5TJEvTG+/e4Zw7EYIYfKXrFLLBpjyK6TPs6jiS7s3Qq6a4Dj
      zDGR4BADwTFmx6JvPpGFxSu48VdHmeQelXqL7HEWJBc+r5Nur8egP4hsavQUhXqthgFUaxUk
      xwALyyvEYlGWFxfQle5NV8HiFnPjLUBNtfHbX92lnNokVahjCjKtZpOe4sdmk2nU62hmC0F0
      nsYEnUsQaq0RZnEpbjw79FWht8pIggnuq10sw1KBbpfdDzA79PtBERzY7I6Pp0IW74WbGQOY
      BsmdDf7yz/+ctScbKHpf0dFP8wKZpoGu6xjn4n/OlJ8zpai/z1kDlj8+ptWwXopZvB0388AU
      RCZnF6lWm6ysLJLevE+yoLK8PE++WOJofwPR6aXRUkkM2Bmcn+fk2Y8kRuL8i/u7rCzO4zZb
      FMtVPJFxpkZCN1INi9vPjatAACYSd7/8iqDXBYDsHGBxcZmgW6T3kwkvo9NLzI6HqVZrmKZB
      5TQMw8LiXbhRBxBOZ3pJsox8OmgRBAGt2+TJ4zUahp2Az8Hm2hNSuRII4HDYAYNms9PPFmGt
      BmNxCT5IFWj92WPmF+/wNkmeW80mDofjxcLaV4SlAt0uuzcXC2TqtNovXkq1Wq13NjU1Pcfr
      H+w6rVbn3Ba7rCCJVpi0xdtxKQcwDY2HP3zL2toahXKJvWQGVdUwTZP95B6aqvaVHMNAVfsz
      zLYeP6Lc7qK3K/zwZAddNygWi5imiaaq6IaB0+FA19TnKo96ut00z9SfLvu7R8/PBaDV1jB6
      uTeU2MLiPJdqf5qlLK7gJAuTEdDaPH64jqCVcfonqJcLbG8JqKKLxLCLXKGELrmp545pCHZG
      h+xk0ockYiGKuWP0Rol0XSEciiB0ipRaBrVmm9/cmWM3laHRUliI2fh2t8niwiiF4yNMo8ZA
      aJzphKUCWbwbl2sBTPNcKEI4PsbS0gJau4k3EGZpaRHRUKlWKmiGQa1SJxSJMjs/RyQcJD46
      QSzoA2AoGELQFDrdHtWmzp3VFfweF/V6DUXRaFVqaMDM0j3GowFC8VEWF+ZQu+/e1bKwuJQD
      eIbjtE72WVtbI19tnMvb+SL/p0i73UIQ+ivDBPyDbDx5RgcHavWYTL7czwmqqsiyTLPZxOsS
      ebS2xkm5TrfTwoTTQaOI3d4f5IpCv+iWCmRxGT5IFaheKdJRVFLZAr/67M6FjlE7RWT7AILk
      utKyWCrQ7bJ7ozPC2q0WxivcyVC7tHsXX8Da5R7ANEymp6Z+YY+fq0Cq4UI3rUggi7fjnANU
      c0mOyh1M0+DBo0fUK2V6mo6uayiKiq5rqJp2qswoaFpfdtQ1FVXTSCX36akqut5XbBRFQTcM
      tHqOdKkNwNaTH3nwaI3f/+Eb2oqGYRhouo6uqSiqimmCZLPj8w6QzeUwDQNF6StIhq6f/t5j
      f/cIRVGeq0CF3DGthrVajMXbce6RaRoapWIBu+qgq2iUSnmGHQP84Zv/l6EBJx3JC90uX/z6
      Lgd7B1SrNRYXZ9jYTuEfHkbtNNjd3aXV7nFnbozDoxz1rsZn494X55AdrCwukdpa42h7nVSl
      ycL8Anq9SKVWJjy+TP5gA7vTQQ8XTx/dR5DtyJ4QrcIBzsEAE1MJCsdHYNZxBUeZSYTf+4Wz
      +Dj4WRfI0A10Qz+XujMYHWF+KkFsbJrI0ADNVp1Wp0uvXSWdKjC9vMz89Dg2l4eFhUUGnBL1
      aoWuqv4sVsdQ2jx98gRxMEJgQGZu+TNGAm7KtQa6rlHNHyN4oizMzeKwmeTzRQwTmrU6kVCI
      TrtFT9UIxUdZmJ9F67av/SJZfLyccwBBlAiGI0SjUZx26XQd3/4KLQgC4uk6v2qvi6qbSJJM
      ZDTG3pM11ncOnmdxFkWRbqeNaQrIsgTCi/V8ZecgK6urTI3HEQQJu13G1DXaPQVRkpAcHrTq
      EU/XN1F0iZF4BAOBcDiEqqqIGLS7ykvnslQgi3fng1SB3oV2q4ndbsUC3Ra15rrs3pq8QG9C
      Vzp0lPOxPa3W2SBXp9U8rwLJonjlN7/Fx8+NOsCz9f4aYqZpovR6qFpfKtU1lVo+TbbSRVMV
      ekpfHdrf3+/PFjO67O8d0ev1nqtAnUrxxuphcXu5UeHcMPqzXQy1x8FBklKxxp3PFnn2dAcH
      bQbHY2RSB1RrFULjq4DJ1tNHhCYmKeSOEGngCCSYGbVUIIt344PoAnXbdRrNDkqzSvakRGJ6
      gemJBKbWo1RtoKoK9VqTSj5NuSsz7HESio0yNzeD1rNUIIt350ZbgGalwOPHTwgMDfRVJVnG
      Fwiws/4UBz18owt0egouu4woCgRjE/icMvvZEpKlAllcAR+NCqR02thd7iu3a6lAt8vue1GB
      ms3rDjnQaDbfLuXh6TrbFhZvxSsdYPPxj/z4eAMAXdfodrvopxmbu90O23t9Nabb6aDpBoah
      oygKiqrS63bRdQND1+l0OuiGia7rpypPX9Y0TZNet4uiaphmf7ZY91TRMXSNTqdCcr8/u2vj
      yX0ePN0BtcGDtR3q5QLdV8TVbaUsFcji7fl5+2PqKIITm95DN+Gb3/9rQuEIPcPFoNSma9qo
      tzp0mzVS2Ty1ZpepgMlWzYVSTBEdSdDRRKZiQ5yUKnQUEZtWxnQGaDTbfP2rzzCNHqmDQwqV
      GndWxvn+uz18AzqJlV9xtLXG4JAT1ewvd2pILgbNDrWuhm4Y1PI5PIMhnO/7Sll8lPysBWiX
      spyUqlRLJ+QqHbz+EPMLswiaSrNnsrQwT8Djplop0+n2qFdqmILIxPQ8sWiUmbk5bIJBpVyi
      21Oo1WvIjgHm5uYZcPb9TWnWqDQ7tGo1eoZJYnyK2bEg9UYLlzfM3Owktpe6x+NTUxzu7723
      i2Lx6fCzFiBbrPPb336Nw2ixvp99PpiQJAmXBA/XHlNv9fA6RUzAZpMRRAlRAEl6KRao20YQ
      bMiShChJCKc2ADS1h2qYyLKMIIiIookgitjtbqrpLZ48LaELfW1fEkUkuxuv3STV7K8aLwg6
      Gxt7JIbd1MQhEkHPT6thYXEhPhoVqNpo4/NYKtBtUWuuy+5HEwv0tnjcjpsugsUt5IOeQ5g/
      2iedryPL4uni2L/sr2dhFVfNWRbqq7YJXHkLcB1lvW123/Y++Gi6QLquX7jZu2m7uq6fjmWu
      1gFu0zW4LrtnDnA2X+RNfNAtwNtw1TfTddq9TWW9bXbf1uZH0wJYWLwLH80g2MLiXZD+9E//
      9E9vuhBXRWp3g92DFKW6Ap0Kquwmu7uOMODHZXtzX1NXKvzNv7pPo93GH/Dx6IfvSKfSuAJh
      0skdhn1eHjzeIBaNXGhxSqVd59GD7+mKPvxugW+//Z6jTIahYISdJw9IH6VR5UGOM4eEhv08
      eLhGJBp9YzPeqhb49psf8ETiyGqd339zn1qtiW/Yz+P7P3CUPsQ+FCV1sEvQ7+Xh2jOi0Qhv
      6h1kDndJHqY5zOTx2DQerW+TzRWJhjx89919MpksvlCMvb0dfG4bT3eOiAQDb7Sb3H5G6ijL
      cbGO2Dzm8d4x7Y6Cx6bxw8MnpI5OSER8bB4cMyC02c7WCQe8r7WptOs8fbZBOrmHfSjE9uMH
      HB2lkAeD5PbXOUilqfcE6uUcbo+Pk1wGj2foZ2X9iBzAYGc/xReff0n6YJdBh41qrUJX9DIW
      DVzohu0UjkhWVEbiUTxCk5IW4IvlGOtbJ5hqnfzJCVMLKzgv4EwAomzHNyBR69qQm4eYoUXm
      InaS+TLdFnzx5R12N7fA1GiVC/hGphm6gJxrc7iwmSqyewijVSCVbxONx3ALLZqGlzvLk2xv
      7qFrHUq5Y8YWVnHZ31xmz5CfYGCIzFGWRrvF3btfoDWOKeZL+KdWmfCJHJUV2vUC+ZMSC8tL
      2C6wiIMvEMLvcXOUK2B0Whg2B7FojFJ6j/jiF/i1E8qCj2opx/FJjXsrc298CIiyHd+Qh3at
      hCEKaLKHu8vT7Gxv0unC5198zsHeNjZZoF2roEiDDPsGf27njaW/RQiC8CJZr6lTLJaxO+wX
      Xkp4IDrL3/vjX2FUjziudPor2IgiGAZKr0OjoyBfUF04K8/ZF2kYBqIoIgoihqkjCCICAmBi
      aArlWgubfDHHEoQXZfCGJ/mTv/0b5MYRB6Xu6TUQAR2126He7l3oJgVoVwt8/+AJK/fuIQEI
      /TrouokoCgiigGEadFsNOqqBdMG5GOVciocbST67u8rSl1/zxeoSWxtPMM3+fA5R7J+jWaug
      czF1TBAE6tUyhiSjK71T1UfExDjNZnKKoVEoV7HZ7a+08xE5gMiQU2Lt0SNEhxdEmbnVz9Er
      hxRqnTcfDlQLWZ48fUqu2sMXHqFzss39H54yMjWCc2CIX395l7WHj7iobNCul9nc2iW5v4Xo
      S5Dd/JGH60kS0TEEvcLDB/fxRUaR7C6++OpX7D9bQ3lVbsmflrOYYy95wPbWBie5Yx4/fUqm
      3CEWjVHLJ3l4/0ciY9M4B7z8+qvPefLwIfoFCv3wwQPcA26yR1li4WEePnxIrqozMz/NwdMH
      PNlKE48E8fiCfL4yzdrjTS6iofz44BEDThtH2RPSyW2era8jSE4iiTjrD++zcdwj4ZcJREZZ
      mQywtnHwRpvNSp5csYaqadhcAZqFFA8fPCAcn8MlKzxae4jDEwTJzurnX6I0iq+8Bh+VCtRf
      RtV4pQZ8kafK2fHCaf4jDAPDPNOUTQRBOP1cfGO/t2/PwDi9oUVR7C/3evo7p5+dlVUQBEzD
      gJdajV/i7HX/md2zMouiiHlaZknqn+/t7L5IiCZKIoZuIIgi4mm9X67Hi2vxZrsvXnb1n/Zn
      35EAGKYBiIgCnN2Ipmm+Ucc/+65AQJRe+q4kEd7iPvioHMDC4m35iLpAFhZvj+UAFp80lgNY
      fNJYDmBxq+i1anz37bcUa7+cD6pTzfHf/JN/zO//v79hPVV6rb2PJhjO4uNHV5r8k3/8X3Pn
      qz/iOF9Eq3Z4sJnhb/+dPya985R8Ps/I/F1++D//eypCgnAkzqDHyebGM5xuJ61qjeNcnlgi
      wdFJjb/7d762WgCL20OjlCI09TV/79/9E5ZGh/hf/ulfEnAp/G9/9jv+xT//c2T3IH/x53+J
      P+BnYnqewu5D9nI1/un/+N+Sbyj87p//FS65w5/91Tckf/hXPFl/YDmAxe3BNRAgl96kq6rU
      a1Uk1xBLi4v02nW8wyN88fnnOESNUGiY0clZXKeZFeIzd/lqZQZ/JMG9O4vMzi4xMRKkXa99
      TLFAFh87sn2AiEfnf/qf/3d8Y6tMeXv8H7/7hv/oH/wDJENldGyMTqfLSDSMyx/DYzNw+iO4
      RIOx8THa7S6JRBTFsBP0Okgs/9p6EWbxaWN1gSw+af5/va0OvXg4f8gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='count' width='192'>
      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
      oZ4gepzWhQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='72' name='date' width='192'>
      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
      8v8Ba23uUd13V7kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='forcasting' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
